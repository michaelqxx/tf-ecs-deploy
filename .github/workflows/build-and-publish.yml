name: Build and Test

on:
  push:
    branches:
      - main

  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 7.9.5

      - name: setup node
        uses: actions/setup-node@v3.6.0
        with:
          node-version: "14.*"
          cache: "pnpm"

      # Why do we explicitly do pnpm install here and not use "run_install: true" above in the pnpm setup?
      # We need to have pnpm setup before node in order to take advantage of the inbuilt caching that is available
      # in that action, and running an install as part of pnpm setup won't use the cache, so we'll explicitly
      # run it here after the cache
      - run: pnpm install

      - name: Lint
        run: pnpm run lint

      - name: Build
        run: pnpm run ci:build

      - name: Tests
        run: pnpm run ci:test

      - name: Upload test report
        uses: dorny/test-reporter@v1.6.0
        if: success() || failure()
        with:
          name: Jest tests
          path: ./**/test-results/*.xml
          reporter: jest-junit

  publish_pre_release:
    runs-on: ubuntu-latest
    needs: build
    name: Publish pre-release packages locally
    if: ${{ github.ref != 'refs/heads/main' || (github.event_name != 'schedule' && !startsWith(github.event.commits[0].message, 'Version Packages')) }}
    steps:
      - name: checkout
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 7.9.5

      - name: Setup node
        uses: actions/setup-node@v3.6.0
        with:
          node-version: "14.*"
          cache: "pnpm"

      # Why do we explicitly do pnpm install here and not use "run_install: true" above in the pnpm setup?
      # We need to have pnpm setup before node in order to take advantage of the inbuilt caching that is available
      # in that action, and running an install as part of pnpm setup won't use the cache, so we'll explicitly
      # run it here after the cache
      - run: pnpm install

      - name: Build
        run: pnpm run ci:build

      - name: Add pre-release changeset
        id: add_pre_release_changeset
        uses: OctopusDeploy/util-actions/add-changeset@add-changeset.0.2.0
        with:
          type: patch
          summary: Changeset added for pre-release versioning
          ignore: |
            package.json
            **/node_modules/**/*
            **/__tests__/**/*
          filter: "hello-world"

      - name: Get branch names
        id: branch_names
        uses: OctopusDeploy/util-actions/current-branch-name@current-branch-name.0.1.0

      - name: Version packages
        run: pnpm changeset version --snapshot ${{ steps.branch_names.outputs.branch_name }}

      - name: Publish
        run: "pnpm run local:publish"

  publish_nightly:
    runs-on: ubuntu-latest
    needs: build
    name: Publish nightly packages
    if: ${{ github.event_name == 'schedule' }}
    steps:
      - name: checkout
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 7.9.5

      - name: Setup node
        uses: actions/setup-node@v3.6.0
        with:
          node-version: "14.*"
          cache: "pnpm"

      # Why do we explicitly do pnpm install here and not use "run_install: true" above in the pnpm setup?
      # We need to have pnpm setup before node in order to take advantage of the inbuilt caching that is available
      # in that action, and running an install as part of pnpm setup won't use the cache, so we'll explicitly
      # run it here after the cache
      - run: pnpm install

      - name: Build
        run: pnpm run ci:build

      - uses: OctopusDeploy/install-octopus-cli-action@v1.2.1
        with:
          version: 7.4.3663

      - name: Add pre-release changeset
        id: add_pre_release_changeset
        uses: OctopusDeploy/util-actions/add-changeset@add-changeset.0.2.0
        with:
          type: patch
          summary: Changeset added for pre-release versioning
          ignore: |
            package.json
            **/node_modules/**/*
            **/__tests__/**/*

      - name: Get branch names
        uses: OctopusDeploy/util-actions/current-branch-name@current-branch-name.0.1.0
        id: branch_names

      - name: Version packages
        run: pnpm changeset version --snapshot ${{ steps.branch_names.outputs.branch_name }}

      - name: Publish
        run: "pnpm run ci:publish -s ${{ secrets.OCTOPUS_URL }} -k ${{ secrets.OCTOPUS_API_KEY }} --space ${{ secrets.OCTOPUS_SPACE }} --project ${{ secrets.OCTOPUS_PROJECT }} --deployTo Nightly --channel Nightly"

  publish_release:
    runs-on: ubuntu-latest
    needs: build
    name: Publish release packages
    if: ${{ github.ref == 'refs/heads/main' && github.event_name != 'schedule' && startsWith(github.event.commits[0].message, 'Version Packages') }}
    steps:
      - name: checkout
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 7.9.5

      - name: Setup node
        uses: actions/setup-node@v3.6.0
        with:
          node-version: "14.*"
          cache: "pnpm"

      # Why do we explicitly do pnpm install here and not use "run_install: true" above in the pnpm setup?
      # We need to have pnpm setup before node in order to take advantage of the inbuilt caching that is available
      # in that action, and running an install as part of pnpm setup won't use the cache, so we'll explicitly
      # run it here after the cache
      - run: pnpm install

      - name: Build
        run: pnpm run ci:build

      - uses: OctopusDeploy/install-octopus-cli-action@v1.2.1
        with:
          version: 7.4.3663

      - name: Publish Release
        run: |
          echo 'The command below will publish release packages to the PreProd (and then manually to Production) feed. Change this step to remove the echo (and remove this extra line) when you are ready to publish your step.'
          echo 'pnpm run ci:publish -s ${{ secrets.OCTOPUS_URL }} -k ${{ secrets.OCTOPUS_API_KEY }} --space ${{ secrets.OCTOPUS_SPACE }} --project ${{ secrets.OCTOPUS_PROJECT }} --deployTo PreProd --channel Release'

      - name: Tag repo
        uses: changesets/action@v1.4.1
        with:
          publish: npx changeset tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    runs-on: ubuntu-latest
    name: Slack - Notify on nightly build failure
    needs: [build, publish_nightly]
    if: ${{ github.event_name == 'schedule' && failure() }}

    steps:
      - name: Notify
        uses: voxmedia/github-action-slack-notify-build@v1.6.0
        with:
          channel: ${{ secrets.SLACK_NOTIFICATIONS_CHANNEL }}
          status: FAILED
          color: danger
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_TOKEN }}
